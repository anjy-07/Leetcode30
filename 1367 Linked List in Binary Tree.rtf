{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww28600\viewh18000\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //  \'97\'97\'97\'97\'97 O(N^ * min(L*H) -------------- \
\
class Solution \{\
public:\
    bool checkList(ListNode* head, TreeNode* root)\{\
        if(!head)\
            return true;\
        if(!root)\
            return false;\
        return (root->val == head->val) && (checkList(head->next, root->left) || checkList(head->next, root->right));\
    \}\
    bool isSubPath(ListNode* head, TreeNode* root) \{     \
      if(root==NULL)\
          return false;\
      return checkList(head, root ) || isSubPath(head, root->left) || isSubPath(head, root->right);\
    \}\
\};\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 //  \'97\'97\'97\'97\'97 O(N)  DP using KMP\'97\'97\'97\'97\'97\'97\'97\
\
class Solution \{\
public:\
    bool checkList(TreeNode* root, int i, vector<int> list, vector<int> lps)\{\
        if(!root)  return false;\
        while(i && root->val != list[i])\
            i = lps[i-1];        \
        if(root->val == list[i])\
            i++;       \
        return (i==lps.size()) || checkList(root->left, i, list, lps) || checkList(root->right, i, list, lps);\
    \}\
                                        \
     bool isSubPath(ListNode* head, TreeNode* root) \{     \
      vector<int> lps=\{0\},list = \{head->val\};\
      head = head->next;        \
      int i=0;     \
      while(head)\{      \
         while(i>0 && head && head->val != list[i])\{\
             i = lps[i-1];\
         \}       \
         if(head->val == list[i])\
            i++;                    \
         list.push_back(head->val);\
         lps.push_back(i);\
         head=head->next;\
      \}\
      return checkList(root,0,list,lps);      \
    \}\
    \
\};\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
\
\
}