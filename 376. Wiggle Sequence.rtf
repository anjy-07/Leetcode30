{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 //\'97\'97\'97\'97 376. Wiggle sequence \'97\'97\'97\'97 \
// \'97\'97\'97\'97\'97\'97 Time complexity -  O(N), Space complexity - O(1)\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \
class Solution \{\
public:\
    int wiggleMaxLength(vector<int>& nums) \{\
        int size = nums.size();        \
        if (size == 0) \
            return 0;  \
        if(size == 1)\
            return 1;\
\
        int inc = 1, dec = 1;\
        int inc1 = 0, dec1=0;\
        for(int i=1; i<size; ++i)\{         \
            if (nums[i] > nums[i-1]) \{\
                inc1 = dec+1;\
                dec1 = dec;\
            \}\
            else if (nums[i] < nums[i-1]) \{\
                dec1 = inc + 1;\
                inc1 = inc;\
            \}\
            else \{\
                inc1 = inc;\
                dec1 = dec;\
            \}            \
            inc = inc1;\
            dec = dec1;\
        \}\
        return max(inc1, dec1);\
     \
    \}\
\};}